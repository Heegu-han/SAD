1주test
정보화 사회
*정보가 유력한 자원이 되고 정보의 처리 및 가공에 의한 가치의 생산을 중심으로 사회나 경제가 
발전해 가는 사회 
주식시장을 보면 앎

데이터 vs 정보
데이터
*실세계에서 관찰이나 측정을 통해 얻어진 정량적 혹은 정성적 수치, 문자 등의 값

정보
*가치 있게 가공되어진 데이터, 데이터의 가공된 결과물


정보 혁명
*컴퓨터와 산업화의 결합, 모든 분야에서 발생

2주
정보 시스템
*업무를 처리하기 위하여 정보를 모으고 처리하고 저장하고 제공하기 위한 관련 컴포넌트의 집합체
예) 편의점 판매 시스템, 수업 관리 시스템

정보 시스템의 요소
*정보시스템은 시스템 경계, 입출력, 서브시스템, 제어 매커니즘, 저장장치와 같은 요소들로 구성

서브시스템 
*복잡한 정보 시스템의 내부를 작은 하부 시스템으로 나누어서 표현

정보 시스템과 비즈니스의 관계
*정보시스템은 비즈니스와 관련이 깊다.
*비용 절감과 효율적인 작업을 통해 경쟁력을 확보하기 위해 정보시스템을 도입
예) 키오스크와 매장......

정보 시스템의 종류
1) ERP(Enterprise Resource Planning) 시스템
2) 트랜젝션 처리 시스템
3) 의사결정 지원 시스템 : 합리적이고 효율적인 의사결정을 하도록 도움 (왓슨)

분석과 설계
*시스템 분석 : "무엇을"
*시스템 설계 : "어떻게"
*소프트웨어 개발

IT 프로젝트 실패 사례
*맥노날드의 이노베이트 프로젝트
*영국의 국가 보건 서비스 IT현대화 프로젝트
*덴버 공항의 자동 수화물 처리
*한국 통신의 고객 통합 시스템

시스템 개발 과정 -> 소프트웨어 개발 생명주기
*작업 초점
*주요 작업과 기술
*결과물

계획
*왜 정보 시스템을 구축하여야 하는지 이해
*프로젝트 팀이 앞으로 어떻게 할지 결정
*프로젝트 계획서

분석
*질문 ->누가,언제,무엇
*작업 ->분석 전략 수집-swot분석, 요구 수집, 문서화

설계
*어떻게
*동작 결정

구현
*구축 또는 패키지 구입으로 설계를 현실화
*작업 단계                                                                                                                         

방법론
*정보시스템을 개발하기 위해 따라야할 절차, 가이드라인, 정형화된 방법의 집합을 방법론이라 한다.

개발 방법론

구조적		정보공학(entity)		객체지향(많이씀)
함수위주		자료위주			클래스 위주
모듈		엔티티			객체
프로그래밍 기법	기업의 전략 및 산출물	설계의표현

소프트웨어 위기
*컴퓨터의 발달과정에서 소프트웨어 개발 속도가 하드웨어 개발 속도를 따라가지 못해
문제가 발생 -> 소프트웨어 위기(1960년대 말)

소프트웨어 위기의 원인
*개발 일정과 예산 측정이 어려움
*유지보수 비용이 증가
*소프트웨어 개발 적체
*소프트웨어 규모 증가와 복잡도에 따른 개발 비용 증가
*프로젝트 관리 기술의 부재
*소프트웨어 개발 기술에 대한 훈련 부족

3주

개발 프로세스
*소프트웨어를 개발해 나가는 단계나 과정
*각 단계의 목표
 ...

폭포수 모델
*각 단계가 다음 단계 시작 전에 끝나야 함 - 순서적
*단순하거나 응용 분야를 잘 알고 있는 경우 적합

병령 개발 모델
*폭포수 모형의 변형
  -대규모 시스템을 쪼개어 병렬로 진행

프로토타이핑 모델
*사용자의 요구를 더 정확히 추출 <=중요
장점 : 빨리 체험해 보게 함으로써 원하는 요구를 빠르게 구체화.
단점 : 오해, 기대심리 유발, 관리가 어려움
적용 : 개발 착수 시점에 요구가 불투명할 때 <= 중요

진화적 모델
*여러 버전으로 나누어 순차적으로 개발
장점 : 유용한 시스템을 빠른 기간 내에 사용자의 손에 들려줌
단점 : 의도적인 미완성 시스템을 가지고 작업하기 시작

애자일 모델
*기존 모델의 Heavy한 프로세스를 없애자
  -과다한 단계
  -과다한 문서
  -코드가 나오기까지 시간이 많이 소요됨
*개발에 집중하자

팀 역할
*프로젝트 관리자 - 계획 수립, 모니터링, 인원, 예산, 시간 조절
*시스템 분석가
*프로그래머
*사용자 지원 - 기술적 정보
*품질 보증 - 테스트
*데이터베이스 관리자
*네트워크 관리자

프로젝트란?
비즈니스 가치를 창조하는 시스템을 만드는 처음부터 마지막까지의 작업.

프로젝트 제안
*시스템을 구축하여 얻을 비즈니스 가치를 발견했을때 시작
*프로젝트 스폰서
*프로젝트의 필요성
-서비스 향상, 성능 개선,..........

타당성 분석
1. 기술적 타당성
2. 경제적 타당성
3. 조직측면의 타당성

4주차

프로젝트 선정
*조직 전반적인 측면의 검토
*프로젝트 분류 요소

프로젝트 관리 도구
*WBS (Work Breakdown Structure)
*Gannt Chart
*작업 네트워크
*작업 정보

WBS
*프로젝트에서 수행하여야 할 작업

간트차트
*작업 일정을 나타낸 수평 막대형 차트

프로젝트 네트워크
*작업의 선후관계를 그래프로 나타냄
*임계경로(Critical path) : 작업 시작에서 종료까지 제일 긴 경로

소요인력 예측
*프로젝트 관리에 영향을 주는 세가지 요소
->시간, 비용, 시스템 규모

예측
*과거의 자료 기반

기능 점수 방법
*설계가 충분히 이루어지지 않은 상태에서 정확한 규모(LOC) 예측은 어려움

조직 구성
*프로젝트에 필요한 평균 인원 수 결정
*Mythical Man-month

요구 분석 과정
*분석 단계
-요구를 찾고 요구를 정리

모델링
*실체를 축약하여 표현하는 작업
*기능적 모델 - 사용자와 환경이라는 관점의 모델
*정적(구조적) 모델 - 클래스의 구조 관점
*동적 모델 - 시스템의 동작과 내부요소의상호 작용

기능적 요구와 비기능적 요구
기능적 - 시스템이 수행하여야 할 처리나 정보 저장등의 기능
비기능적 - 성능, 사용용이성, 보안, 프로젝트 환경

요구 정의 작성
*반복적이며 계속적인 작업

요구 결정
비즈니스나 IT측면에서 요구 자체를 결정

비즈니스 프로세스 분석 기법
*요구 분석의 세가지 단계
-현 상황 이해
-개선할 점 파악
-새 시스템을 정의
*시스템에 담길 변화의 정도에 따라 세 가지로 나눔

비즈니스 프로세스 자동화 (BPA)
*업무 절차는 변경하지 않고 일부 작업에 컴퓨터를 도입
*효율을 높일 수는 있지만 비즈니스 가치나 영향은 적음

비즈니스 프로세스 개선 (BPI)
*새로운 기술을 이용하거나 조직을 운영하는 방법을 적절히 바꾸는것
-효율과 효과를 높임
*기간 분석
*작업 비용 분석
*비공식 벤치마킹

비즈니스 프로세스 리엔지니어링 (BPR)
*조직이 수행하는 기본 틀을 수정
*새 아이디어와 기술에 초점
*성과 분석
*기술 분석
*작업 제거

5주차

요구 추출 방법
*분석가는 명탐정이 되어야 한다.
*요구 추출의 실제
-요구 추출과정을 통해 지지자 형서, 신뢰감 구축
-누가 참여할 것인지 신중히 결정
5가지 방법으로 결정
1. 인터뷰
*사용자와의 심층 대화로부터 요구를 끌어내는 방법

2. JAD회의 (Joint Application Development)
*프로젝트 팀, 사용자, 관리자의 협의 회의

3. 설문
*개인으로부터 정보를 취하기 위한 질의서
*설문지 설계가 중요

4. 서류 분석
*현재 시스템을 이해하기 위하여
*변경, 개선할 필요성을 찾아내야함

5. 관찰
*작업 과정을 지켜보면서 현재 시스템에 관한 정보 수집

요구 취합 방법 비교
*강점과 약점 이해

요구 문서화
*사용자와 엔지니어가 같이 볼 수 있어야 함

UML (Unified Modeling Language)
*소프트웨어 공학에서 사용되는 표준화된 범용 모델링 언어
*모델링 언어로써 소프트웨어 시스템을 기술하는데 사용
*목적
-객체지향 개념을 사용하여 시스템을 모델링 할 수 있도록 한다.
-실행 부품과 설계 개념을 연결 할 수있게 한다.
-복잡한 시스템의 규모를 알 수 있게 한다.
-사람과 기계가 이용할 수 있는 모델링 언어를 만든다.

모델링
*실체를 축약하여 표현하는 작업
*기능적 모델 - 사용자와 환경이라는 관점의 모델
*정적(구조적) 모델 - 클래스의 구조 관점
*동적 모델 - 시스템의 동작과 내부요소의상호 작용

모델링
*도메인 지식을 체계화하는 과정
*중요한 도메인 개념과 특성, 관계를 파악하여 다이어그램으로 정형화
*과거에는 자료 위주의 모델링, 현재는 객체지향 패러다임에서의 모델링
			->UML을 사용하여 표현
왜 모델링을 하는가 (개발자)
*도메인 지식을 체계화하는 과정
*응용문제를 이해하는데 도움을 줌
*개발팀원들 사이에 응용문제의 공통 개념으로 대화하게 하고 개선시킴
*파악한 개념을 사용자와 고객에게 전달 할 떄 도움을 줌
*후속 작업 즉 설계, 구현, 테스팅, 유지보수에 개념적인 기준을 제공

UML을 이용한 모델링
-기능적 관점 : 사용자 측면에서 본 시스템의 기능
-구조적 관점 : 시간 개념 포함X
-동적 관점 : 시간 개념을 포함함

모델링 도구
*IBM의 Rational Rose 비쌈
*마소의 StarUML

기능적 모델링
*사용자와 시스템 사이의 상호작용을 설명하고 문서화 하는데 사용
*기능을 잘 정리하고 표현하는 방법, 요구를 문서로 담는 방법
-프로토타입
-유스케이스
-자연어
*유스케이스와 액티비티 다이어그램을 이용하여 새로운 시스템의 요구를 기능적 관점에서 파악

유스케이스 개념
*외부에서 본 시스템의 뷰
*시스템에 무슨 서비스가 있는지 사용자의 관점으로 본 것
*목표 지향적 인터랙션의 집합

시나리오
*유스케이스의 인스턴스

유스케이스 다이어그램
액터
*시스템으로 부터 서비스를 받을 필요가 있는 외부 요소
관계
*커뮤니케이션 관계
-액터와 유스케이스 사이
*포함관계
-다른 유스케이스를 호출
*확장 관계
*존재하는 사용 사례의 동작을 조건적으로 확장
*이벤트이 추가나 예외적인 케이스

유스케이스 다이어그램 작성방법
*세 단계의 과정
1. 주요 액터 및 사용 사례 파악
2. 사용 사례 확장
3. 사용 사례 확인

유스케이스 명세 작성
*유스케이스 안의 동작을 글로 서술

사건의 흐름
*사건
-액터의 액션과 이에 따른 시스템의 반응

시작 조건과 종료 조건
*유스케이스를 엄격하게 작성하려면 유스케이스의 시작 조건과 종료 조건을 포함시킨다.

유스케이스의 링크
*포함 관계
-유스케이스에서 공통의 동작을 재사용할 목적으로 정의할 때 사용
*확장 관계
-존재하는 유스케이스를 조건적으로 확장할 때 사용

마크다운
*일반 텍스트 기반의 경량 마크업 언어
*일반 마크업 언어에 비해 문법이 쉽고,간단
*HTML과 RTF(리치 텍스트) 등 서식 문서로 쉽게 변황이 되기 때문에 README 파일이나 온라인
 게시물등에 많이 사용된다.

액티비티 다이어그램
*분석 단계에 워크플로우를 표현 하는 방법
- 액티비티-비즈니스 작업
*사용 사례 안의 복잡한 흐름을 나타내기도 함

액티비티 다이어그램의 사례
*인터넷 쇼핑몰 주문

기능적 모델 검증
*기능 모델이 비즈니스 프로세스를 잘 나타내고 있는지 검토
*사용자 요구가 잘 반영되어져 있는가 판다
*포함되지 않는 내용

모델 검토
*워크스루(Workthroughs)
-계획된 개발자 검토회의
-비공식 기술적 검토 회의
-결함이나 오류를 찾아내는 회의
*인스펙션(Inspection)
-공식적 검사 회의
-미리 체크리스트를 만들고 이를 바탕으로 모델을 검토하고 결함을 결정하는 회의















